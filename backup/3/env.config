[env]
time_limit = 100
time_step = 0.25
val_size = 100
test_size = 300
randomize_attributes = true

[reward]
# 终局奖励保持适中（便于 credit assignment），靠塑形把路走稳
success_reward = 6.0
collision_penalty = -0.25

# 近距不适（平方惩罚）
discomfort_dist = 0.2
discomfort_penalty_factor = 1.0

# ===== 稳定/安全向的 shaping =====
w_prog  = 4.0
w_goal  = 10.0
w_coll  = 10.0
w_soc   = 2.5          ; ↑ 社交距离权重（减贴边抖动）
soc_dist= 0.5
alpha   = 10.0
v_safe  = 0.5
w_relv  = 1.0
w_time  = 0.12         ; ↑ 轻惩时间，促进果断通行
w_shape = 0.2
w_align = 0.2
max_dist= 10.0

# 预判类
w_ttc = 1.5           ; ↑ 近未来冲突的“软刹车”
ttc_thresh = 2.5

# 速度整形（相对 v_pref 的二次偏差）
w_speed = 0.35        ; ↑ 速度更稳
speed_target = 0.55   ; 目标速度略降，减少急停/冲击

# 早停：防原地磨蹭
noprog_eps = 0.02
noprog_patience = 20

[sim]
train_val_sim = circle_crossing
test_sim = circle_crossing
square_width = 10
circle_radius = 4
human_num = 5

[humans]
visible = true
policy = orca
radius = 0.3
v_pref = 1
sensor = coordinates

[robot]
visible = true
policy = none
radius = 0.3
v_pref = 1
sensor = coordinates

[orca]
neighbor_dist = 2.0
max_neighbors = 5
time_horizon = 3.0
time_horizon_obst = 2.0
radius = 0.3
max_speed = 1.0
safety_space = 0.05
label_inflate = 0.05
slow_k = 1.5
eps_noise = 0.0

